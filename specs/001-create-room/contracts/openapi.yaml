openapi: 3.0.3
info:
  title: Random With Friends - Room API
  version: 1.0.0
  description: |
    API for room management using Next.js App Router and Pusher Channels.
    All endpoints are implemented as Route Handlers in the app/api directory.
servers:
  - url: http://localhost:3000/api
    description: Local development
  - url: https://random-with-friends.vercel.app/api
    description: Production (Vercel)
paths:
  /room/create:
    post:
      summary: Create a new room
      description: |
        Creates a new room with the provided host name.
        Implemented as a Route Handler in app/api/room/create/route.ts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Display name of the host
                  minLength: 1
                  maxLength: 50
              required:
                - name
      responses:
        '201':
          description: Room created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  roomId:
                    type: string
                    description: Unique room identifier
                  channel:
                    type: string
                    description: Pusher channel name (presence-room-{roomId})
                required:
                  - roomId
                  - channel
  /room/{roomId}/join:
    post:
      summary: Join an existing room
      description: |
        Join a room using the room ID and guest name.
        Implemented as a Route Handler in app/api/room/[roomId]/join/route.ts
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
            minLength: 4
            maxLength: 8
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Display name of the guest
                  minLength: 1
                  maxLength: 50
              required:
                - name
      responses:
        '200':
          description: Successfully joined room
          content:
            application/json:
              schema:
                type: object
                properties:
                  channel:
                    type: string
                    description: Pusher channel name
                  participant:
                    $ref: '#/components/schemas/Participant'
                required:
                  - channel
                  - participant
        '404':
          description: Room not found or inactive
  /rooms/{roomId}/close:
    post:
      summary: Close a room (host action)
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room closed
  /rooms/{roomId}/participants:
    get:
      summary: Get current participants (server-side view)
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Participant list
          content:
            application/json:
              schema:
                type: object
                properties:
                  participants:
                    type: array
                    items:
                      type: object
                      properties:
                        sessionId:
                          type: string
                        displayName:
                          type: string
                        role:
                          type: string
                        connectedAt:
                          type: string
                          format: date-time
  /pusher/auth:
    post:
      summary: Pusher channel authorization
      description: |
        Authenticates Pusher channel subscriptions.
        Implemented as a Route Handler in app/api/pusher/auth/route.ts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                socket_id:
                  type: string
                  description: Pusher socket ID
                channel_name:
                  type: string
                  description: Channel to authenticate
                name:
                  type: string
                  description: Display name for presence data
              required:
                - socket_id
                - channel_name
                - name
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth:
                    type: string
                    description: Authentication signature
                  channel_data:
                    type: string
                    description: Presence channel user data
                required:
                  - auth
                  - channel_data
        '403':
          description: Authentication failed or room not found

components:
  schemas:
    Room:
      type: object
      description: Room information
      properties:
        id:
          type: string
          description: Unique room identifier
          minLength: 4
          maxLength: 8
          pattern: ^[A-Z0-9]+$
        hostId:
          type: string
          description: Current host's participant ID
        status:
          type: string
          description: Room status
          enum: [active, closed]
        createdAt:
          type: string
          description: Room creation timestamp
          format: date-time
      required:
        - id
        - hostId
        - status
        - createdAt

    Participant:
      type: object
      description: Room participant information
      properties:
        id:
          type: string
          description: Unique participant ID (from Pusher)
        name:
          type: string
          description: Display name
          minLength: 1
          maxLength: 50
        role:
          type: string
          description: Participant role
          enum: [host, guest]
        joinedAt:
          type: string
          description: Join timestamp
          format: date-time
        status:
          type: string
          description: Connection status
          enum: [connected, reconnecting, disconnected]
      required:
        - id
        - name
        - role
        - joinedAt
        - status

    PusherEvent:
      type: object
      description: Pusher channel event
      properties:
        event:
          type: string
          description: Event type
          enum:
            - room:closed
            - host:changed
            - participant:joined
            - participant:left
        data:
          type: object
          description: Event-specific payload
